// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ac_web_test_api.AppDbContext;

namespace ac_web_test_api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ac_web_test_api.Models.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("company");
                });

            modelBuilder.Entity("ac_web_test_api.Models.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<int>("companyId")
                        .HasColumnType("integer");

                    b.Property<string>("corpName")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("ac_web_test_api.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<int>("companyId")
                        .HasColumnType("integer");

                    b.Property<string>("firstName")
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("ac_web_test_api.Models.Invoice", b =>
                {
                    b.Property<string>("invNumber")
                        .HasColumnType("text");

                    b.Property<int>("companyId")
                        .HasColumnType("integer");

                    b.Property<string>("corpName")
                        .HasColumnType("text");

                    b.Property<string>("currency")
                        .HasColumnType("text");

                    b.Property<int>("invSum")
                        .HasColumnType("integer");

                    b.HasKey("invNumber");

                    b.HasIndex("companyId");

                    b.ToTable("invoice");
                });

            modelBuilder.Entity("ac_web_test_api.Models.Customer", b =>
                {
                    b.HasOne("ac_web_test_api.Models.Company", "company")
                        .WithMany("customers")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ac_web_test_api.Models.Employee", b =>
                {
                    b.HasOne("ac_web_test_api.Models.Company", "company")
                        .WithMany("employees")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ac_web_test_api.Models.Invoice", b =>
                {
                    b.HasOne("ac_web_test_api.Models.Company", "company")
                        .WithMany("invoices")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
